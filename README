Name: David Tran
Student Number: 301223841
SFU User Name: dta31
Lecture Section: CMPT 300: D100
Instructor: Brian G. Booth
TA: Scott Kristjanson

The previous version of this program had the limitation of only having access to one CPU unit.
By incorporating sockets, a client-server architect is introduced, thus removing such limitations.
Decryption Tasks are executed using a First-Come-First-Serve Scheduling policies.

Included Files :  server.c, client.c, decrypt.c, decrypt.h, makefile, memwatch.h, memwatch.c.

Compilation Command : make all
      - Input : Compilation of included files.
      - Output: Lyrebird.client,Lyrebird.server
Clean Command : make clean
      - Output : deletion of materials produced from the execution of both programs Ie: Log Files.
      
Server Commands : ./lyrebird.server <CONFIG FILE> <LOGFILE>
How to Run : 
To execute a Server terminal, type the name/location of the file which contains locations of desired encryption files. Throuhout execution, a log file be containing all relevant details.  The terminal will output the necessary IPV4 Port and Address necessary for the client to Run.


Client Commands: ./lyrebird.client <IP> <PORT>
How to run: 
To execute a client terminal, execute lyrebird.client with the IPV4 information of the server. 
(*Note the client program/hardware must have access to the contents of the configuration file.)

Configuration File Format: <decrypted file> <encrypted file>
decrypt1.txt encrypt1.txt
decrypt2.txt encrypt2.txt

References:
Beej's Guide to Network Programming,
http://beej.us/guide/bgnet/output/html/singlepage/bgnet.html
